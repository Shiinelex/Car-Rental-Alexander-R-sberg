@page "/"
@using Car_Rental.Common.Classes
@using Car_Rental.Common.Enums
@using Car_Rental.Business.Classes

@inject BookingProcessor bp;

<PageTitle>Car Rental Assignment - Alexander Råsberg</PageTitle>

<h1>Car Rental Assignment - Alexander Råsberg</h1>

<h4>Vehicles</h4>

<table class="table table-hover border visible border-3 border-black">
    <thead>
        <tr>
            <th>RegNo</th>
            <th>Brand</th>
            <th>Odometer</th>
            <th>Cost KM</th>
            <th>Vehicle Type</th>
            <th>$ Day</th>
            <th>Action</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th><input disabled="@bp.isLoading" @bind="@bp.tempVehicle.RegNo" class="inputClass rounded-2" placeholder="Reg Number" /></th>
            <th><input disabled="@bp.isLoading" @bind="@bp.tempVehicle.Brand" class="inputClass rounded-2" placeholder="Brand" /></th>
            <th><input disabled="@bp.isLoading" @bind="@bp.tempVehicle.Odometer" class="inputClass rounded-2" type="number" placeholder="KM" /></th>
            <th><input disabled="@bp.isLoading" @bind="@bp.tempVehicle.CostKM" class="inputClass rounded-2" type="number" placeholder="Cost KM" /></th>
            <th>
                <select disabled="@bp.isLoading" @bind="@bp.tempVehicle.Type" class="rounded-2" style="width:100%; height: 30px; min-width:100px;">
                    <option disabled selected value> - select type - </option>
                    @foreach (var type in Enum.GetNames(typeof(VehicleType)))
                    {
                        <option>@type</option>
                    }
                </select>
            </th>
            <th><input disabled="@bp.isLoading" @bind="@bp.tempVehicle.CostDay" class="inputClass rounded-2" placeholder="$ Day" /></th>
            <th><button disabled="@bp.isLoading" type="button" @onclick="@bp.AddVehicle" class="btn btn-outline-primary btn-sm inputClass">Add</button></th>
            @if (bp.isLoading)
            {
                <th style="min-width: 100px;"><span class="badge rounded-pill text-bg-warning">Loading..</span></th>
            }
            else
            {
                <th style="min-width: 100px;"></th>
            }
        </tr>
        <!--Creates the Vehicle table-rows-->
        @foreach(var vehicle in bp.GetVehicles())
        {
            <tr class="@(vehicle.Status == VehicleStatus.Booked ? "table-danger" : "")">
                <td style="font-weight: bold">@vehicle.RegNo</td>
                <td>@vehicle.Brand</td>
                <td>@vehicle.Odometer</td>
                <td>@vehicle.CostKM</td>
                <td>@vehicle.Type</td>
                <td>@vehicle.CostDay</td>
                <td>
                    <span style="display:flex">
                    @if(vehicle.Status == VehicleStatus.Available)
                    {  
                        <select @bind="@vehicle.tempPerson" disabled="@bp.isLoading" class="rounded-2" style="width:100%; min-width:100px;">
                            <option disabled selected value> - select person - </option>
                            @foreach(var person in bp.GetPersons())
                            {
                                        <option value="@person.Id">@($"{person.FirstName} {person.LastName} ({person.SSN})")</option>
                            }
                        </select>
                        <button @onclick="(() => bp.RentVehicle(vehicle))" disabled="@bp.isLoading" type="button" class="btn btn-outline-primary btn-sm" style="min-width: 70px; margin-left: 10px">Book</button>
                    }
                    else
                    {
                        <input @bind="bp.distance" disabled="@bp.isLoading" class="inputClass rounded-2 border-1" placeholder="Distance" />
                        <button @onclick="(() => bp.ReturnVehicle(vehicle.Id, bp.distance))" disabled="@bp.isLoading" type="button" class="btn btn-outline-primary btn-sm" style="min-width: 70px; margin-left: 10px">Return</button>
                    }
                    </span>
                </td>
                <td>
                    @switch (vehicle.Status)
                    {
                        case VehicleStatus.Available:
                            <span class="badge text-bg-success" style="width: 100%">Available</span>
                            break;
                        case VehicleStatus.Booked:
                            <span class="badge text-bg-danger" style="width: 100%">Booked</span>
                            break;
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<h4>Bookings</h4>
<table class="table table-hover border visible border-3 border-black">
    <thead>
        <tr>
            <th>RegNo</th>
            <th>Customer</th>
            <th>KM Rented</th>
            <th>KM Returned</th>
            <th>Rented</th>
            <th>Returned</th>
            <th>Cost</th>
            <th>Status</th>
        </tr>
    </thead> 
    <tbody>
        <!--Creates the bookings table-rows-->
        @foreach (var booking in bp.GetBookings())
        {
            if(booking.Status == BookingStatus.Open)
            {
                <tr class="table-danger">
                    <td style="font-weight: bold">@booking.RegNo</td>
                    <td>@booking.Customer</td>
                    <td>@booking.KmRented</td>
                    <td></td>
                    <td>@booking.DateRented.ToShortDateString()</td>
                    <td></td>
                    <td></td>
                    <td><span class="badge text-bg-danger" style="width: 100%">Open</span></td>
                </tr>
            }
            else
            {
                <tr class="table-success">
                    <td style="font-weight: bold">@booking.RegNo</td>
                    <td>@booking.Customer</td>
                    <td>@booking.KmRented</td>
                    <td>@booking.KmReturned</td>
                    <td>@booking.DateRented.ToShortDateString()</td>
                    <td>@booking.DateReturned.ToShortDateString()</td>
                    <td>@booking.Cost</td>
                    <td><span class="badge text-bg-success" style="width: 100%">Closed</span></td>
                </tr>
            }
        }
    </tbody>
</table>

<h4>Customers</h4>
<table class="table table-striped table-hover border visible border-3 border-black" style="width: 50%; min-width: 500px">
    <thead>
        <tr>
            <th>SSN</th>
            <th>Last Name</th>
            <th>First Name</th>
            <th>Action</th>
        </tr>
            <tr>
            <th><input @bind="bp.tempCustomer.SSN" class="inputClass rounded-2" placeholder="SSN" /></th>
            <th><input @bind="bp.tempCustomer.LastName" class="inputClass rounded-2" placeholder="Last Name" /></th>
            <th><input @bind="bp.tempCustomer.FirstName" class="inputClass rounded-2" placeholder="First Name" /></th>
            <th><button @onclick="bp.AddPerson" class="btn btn-outline-primary btn-sm" style="width: 100%">Add</button></th>
        </tr>
    </thead>
    <tbody>
        <!--Creates the Customer table-rows-->
        @foreach (var person in bp.GetPersons())
        {
            <tr>
                <td style ="font-weight: bold">@person.SSN</td>
                <td>@person.LastName</td>
                <td>@person.FirstName</td>
                <td><button @onclick="@(() => bp.RemoveCustomer(person.Id))" class="btn btn-outline-primary btn-sm">Remove</button></td>
            </tr>
        }
    </tbody>
</table>
